///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class TVPopularResults {
/*
{
  "backdrop_path": "/oKt4J3TFjWirVwBqoHyIvv5IImd.jpg",
  "first_air_date": "2019-06-16",
  "genre_ids": [
    18
  ],
  "id": 85552,
  "name": "Euphoria",
  "origin_country": [
    "US"
  ],
  "original_language": "en",
  "original_name": "Euphoria",
  "overview": "A group of high school students navigate love and friendships in a world of drugs, sex, trauma, and social media.",
  "popularity": 4107.4,
  "poster_path": "/jtnfNzqZwN4E32FGGxx1YZaBWWf.jpg",
  "vote_average": 8.4,
  "vote_count": 6743
} 
*/

  String? backdropPath;
  String? firstAirDate;
  List<int?>? genreIds;
  int? id;
  String? name;
  List<String?>? originCountry;
  String? originalLanguage;
  String? originalName;
  String? overview;
  double? popularity;
  String? posterPath;
  double? voteAverage;
  int? voteCount;

  TVPopularResults({
    this.backdropPath,
    this.firstAirDate,
    this.genreIds,
    this.id,
    this.name,
    this.originCountry,
    this.originalLanguage,
    this.originalName,
    this.overview,
    this.popularity,
    this.posterPath,
    this.voteAverage,
    this.voteCount,
  });
  TVPopularResults.fromJson(Map<String, dynamic> json) {
    backdropPath = json['backdrop_path']?.toString();
    firstAirDate = json['first_air_date']?.toString();
    if (json['genre_ids'] != null && (json['genre_ids'] is List)) {
      final v = json['genre_ids'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(int.parse(v.toString()));
      });
      genreIds = arr0;
    }
    id = int.tryParse(json['id']?.toString() ?? '');
    name = json['name']?.toString();
    if (json['origin_country'] != null && (json['origin_country'] is List)) {
      final v = json['origin_country'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      originCountry = arr0;
    }
    originalLanguage = json['original_language']?.toString();
    originalName = json['original_name']?.toString();
    overview = json['overview']?.toString();
    popularity = double.tryParse(json['popularity']?.toString() ?? '');
    posterPath = json['poster_path']?.toString();
    voteAverage = double.tryParse(json['vote_average']?.toString() ?? '');
    voteCount = int.tryParse(json['vote_count']?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['backdrop_path'] = backdropPath;
    data['first_air_date'] = firstAirDate;
    if (genreIds != null) {
      final v = genreIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['genre_ids'] = arr0;
    }
    data['id'] = id;
    data['name'] = name;
    if (originCountry != null) {
      final v = originCountry;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['origin_country'] = arr0;
    }
    data['original_language'] = originalLanguage;
    data['original_name'] = originalName;
    data['overview'] = overview;
    data['popularity'] = popularity;
    data['poster_path'] = posterPath;
    data['vote_average'] = voteAverage;
    data['vote_count'] = voteCount;
    return data;
  }
}

class TVPopular {
/*
{
  "page": 1,
  "results": [
    {
      "backdrop_path": "/oKt4J3TFjWirVwBqoHyIvv5IImd.jpg",
      "first_air_date": "2019-06-16",
      "genre_ids": [
        18
      ],
      "id": 85552,
      "name": "Euphoria",
      "origin_country": [
        "US"
      ],
      "original_language": "en",
      "original_name": "Euphoria",
      "overview": "A group of high school students navigate love and friendships in a world of drugs, sex, trauma, and social media.",
      "popularity": 4107.4,
      "poster_path": "/jtnfNzqZwN4E32FGGxx1YZaBWWf.jpg",
      "vote_average": 8.4,
      "vote_count": 6743
    }
  ],
  "total_pages": 6241,
  "total_results": 124812
} 
*/

  int? page;
  List<TVPopularResults?>? results;
  int? totalPages;
  int? totalResults;

  TVPopular({
    this.page,
    this.results,
    this.totalPages,
    this.totalResults,
  });
  TVPopular.fromJson(Map<String, dynamic> json) {
    page = int.tryParse(json['page']?.toString() ?? '');
    if (json['results'] != null && (json['results'] is List)) {
      final v = json['results'];
      final arr0 = <TVPopularResults>[];
      v.forEach((v) {
        arr0.add(TVPopularResults.fromJson(v));
      });
      results = arr0;
    }
    totalPages = int.tryParse(json['total_pages']?.toString() ?? '');
    totalResults = int.tryParse(json['total_results']?.toString() ?? '');
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['page'] = page;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['results'] = arr0;
    }
    data['total_pages'] = totalPages;
    data['total_results'] = totalResults;
    return data;
  }
}
